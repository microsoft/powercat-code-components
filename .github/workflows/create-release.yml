name: Create Release

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: windows-latest
    env:
      MajorVersion: 1
      MinorVersion: 0
      BuildVersion: ${{ github.run_number }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - run: npm ci
        working-directory: "./build-scripts"

      - name: Version Stamp Code Components
        uses: actions/github-script@v2
        with:
          script: |
            const version = require(`${process.env.GITHUB_WORKSPACE}/build-scripts/version-stamp.js`)
            version({
              majorVersion: ${{ env.MajorVersion }},
              minorVersion: ${{ env.MinorVersion }},
              buildVersion: ${{ env.BuildVersion }},
              manifestsPaths: [
                `${process.env.GITHUB_WORKSPACE}/AutoWidthLabel/AutoWidthLabel`,
                `${process.env.GITHUB_WORKSPACE}/Breadcrumb/Breadcrumb`,
                `${process.env.GITHUB_WORKSPACE}/Calendar/Calendar`,
                `${process.env.GITHUB_WORKSPACE}/CommandBar/CommandBar`,
                `${process.env.GITHUB_WORKSPACE}/ContextMenu/ContextMenu`,
                `${process.env.GITHUB_WORKSPACE}/DetailsList/DetailsList`,
                `${process.env.GITHUB_WORKSPACE}/Elevation/Elevation`,
                `${process.env.GITHUB_WORKSPACE}/Facepile/Facepile`,
                `${process.env.GITHUB_WORKSPACE}/Icon/Icon`,
                `${process.env.GITHUB_WORKSPACE}/KeyboardShortcuts/KeyboardShortcuts`,
                `${process.env.GITHUB_WORKSPACE}/Nav/Nav`,
                `${process.env.GITHUB_WORKSPACE}/Picker/Picker`,
                `${process.env.GITHUB_WORKSPACE}/Pivot/Pivot`,
                `${process.env.GITHUB_WORKSPACE}/ProgressIndicator/ProgressIndicator`,
                `${process.env.GITHUB_WORKSPACE}/ResizableTextarea/ResizableTextarea`,
                `${process.env.GITHUB_WORKSPACE}/Shimmer/Shimmer`,
                `${process.env.GITHUB_WORKSPACE}/Spinner/Spinner`,
                `${process.env.GITHUB_WORKSPACE}/TagList/TagList`,
                `${process.env.GITHUB_WORKSPACE}/ThemeGenerator/ThemeGenerator`
                ],
              solutionPaths: `${process.env.GITHUB_WORKSPACE}/Solution/src/Other/Solution.xml`,
              beta: false}
              )

      - run: npm ci
        working-directory: "./AutoWidthLabel"
      - run: npm ci
        working-directory: "./Breadcrumb"
      - run: npm ci
        working-directory: "./Calendar"        
      - run: npm ci
        working-directory: "./CommandBar"
      - run: npm ci
        working-directory: "./ContextMenu"
      - run: npm ci
        working-directory: "./DetailsList"
      - run: npm ci
        working-directory: "./Elevation"
      - run: npm ci
        working-directory: "./Facepile"
      - run: npm ci
        working-directory: "./Icon"
      - run: npm ci
        working-directory: "./KeyboardShortcuts"
      - run: npm ci
        working-directory: "./Nav"
      - run: npm ci
        working-directory: "./Picker"
      - run: npm ci
        working-directory: "./Pivot"       
      - run: npm ci
        working-directory: "./ProgressIndicator"
      - run: npm ci
        working-directory: "./ResizableTextarea"
      - run: npm ci
        working-directory: "./Shimmer"        
      - run: npm ci
        working-directory: "./Spinner"                
      - run: npm ci
        working-directory: "./TagList"
      - run: npm ci
        working-directory: "./ThemeGenerator"

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "5.x"

      - run: dotnet build -c release
        working-directory: "./Solution"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.MajorVersion }}.${{ env.MinorVersion }}.${{ env.BuildVersion }}
          release_name: v${{ env.MajorVersion }}.${{ env.MinorVersion }}.${{ env.BuildVersion }}
          draft: true
          prerelease: true

      - name: Upload Release Asset
        id: upload-release-asset1
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Solution/bin/Release/Solution.zip
          asset_name: PowerCATCodeComponents_unmanaged_${{ env.MajorVersion }}_${{ env.MinorVersion }}_0_${{ env.BuildVersion }}.zip
          asset_content_type: application/zip

      - name: Upload Release Asset
        id: upload-release-asset2
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Solution/bin/Release/Solution_managed.zip
          asset_name: PowerCATCodeComponents_managed_${{ env.MajorVersion }}_${{ env.MinorVersion }}_0_${{ env.BuildVersion }}.zip
          asset_content_type: application/zip
          
